# X は 9 の倍数 → X の各桁の和は 9 の倍数 → K は 9 の倍数
# 求める個数は「各桁の和が K である正整数の個数」

K = int(input())
mod = 10**9 + 7

if K % 9 != 0:
    print(0)
    exit()

# dp[K] = 各桁の和が K となる整数の通り数
# dp[3] = 4 (3, 12, 21, 111)
dp = [0] * (K+1)
dp[0] = 1

# dp[i] = dp[i-1] + dp[i-2] + dp[i-3] + dp[i-4] + dp[i-5] + dp[i-6] + dp[i-7] + dp[i-8] + dp[i-9]
# なぜなら、桁和が K の整数は、「最上位の桁の数が 1、それ以外の桁の数の合計が K-1」
# 「最上位の桁の数が 2、それ以外の桁の数の合計が K-2」・・・「最上位の桁の数が 9、それ以外の桁の数の合計が K-9」に分解できるため
for i in range(1, K+1):
    b = min(i, 9)
    for j in range(1, b+1):
        dp[i] = (dp[i] + dp[i-j]) % mod

print(dp[K])
